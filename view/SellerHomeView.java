package com.mycompany.applicationproperty.view;

import com.mycompany.applicationproperty.ApplicationProperty;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SellerHomeView extends javax.swing.JPanel {

    private ApplicationProperty app;
    private int indexLogin;
    private int type = 0;

    public SellerHomeView(ApplicationProperty app) {
        this.app = app;
        initComponents();
        lblAvailable.setText("");
        comboAvailable.setVisible(false);
        this.indexLogin = app.currentUser;
        String balance = "$USD " + Integer.toString(app.store.getSeller(app.currentUser).getTabungan().getSaldo());
        String name = "Hello, " + app.store.getSeller(app.currentUser).getFullName();
        label_balance.setText(balance);
        labelWelcome.setText(name);
        DataView();
        System.out.println(app.store.getSeller(indexLogin).getFullName());
        System.out.println(app.currentUser);
        System.out.println(app.store.getSeller(app.currentUser).getAmountHouse());
        System.out.println(app.store.getSeller(app.currentUser).getAmountLand());
    }

    private void clear() {
        inputID.setText("");
        inputCost.setText("");
        inputLocation.setText("");
        inputBuildingArea.setText("");
        inputManyRooms.setText("");
        lblAvailable.setText("");
        comboAvailable.setVisible(false);

        btnAdd.setText("Add");
    }

    private void DataView() {
        DefaultTableModel model = new DefaultTableModel();
        //house
        if (type == 0) {
            model.addColumn("ID");
            model.addColumn("Cost");
            model.addColumn("Location");
            model.addColumn("Building Area");
            model.addColumn("Many Rooms");
            model.addColumn("Available");

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);

            for (int i = 0; i < app.store.getSeller(indexLogin).getAmountHouse(); i++) {
                model.addRow(new Object[]{
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getCode(),
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getCost(),
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getLocation(),
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getBuildingArea(),
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getManyRooms(),
                    app.store.getSeller(indexLogin).getHouseByIdx(i).
                    getAvailable(),});
            }
        } else {
            //land
            model.addColumn("ID");
            model.addColumn("Cost");
            model.addColumn("Location");
            model.addColumn("Land Area");
            model.addColumn("Available");

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);

            for (int i = 0; i < app.store.getSeller(indexLogin).getAmountLand(); i++) {
                Object[] data = {
                    app.store.getSeller(indexLogin).getLandByIdx(i).
                    getCode(),
                    app.store.getSeller(indexLogin).getLandByIdx(i).
                    getCost(),
                    app.store.getSeller(indexLogin).getLandByIdx(i).
                    getLocation(),
                    app.store.getSeller(indexLogin).getLandByIdx(i).
                    getLandArea(),
                    app.store.getSeller(indexLogin).getLandByIdx(i).
                    getAvailable(),};
                model.addRow(data);
            }
        }

        tblOutput.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTopUp = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOutput = new javax.swing.JTable();
        btnHouse = new javax.swing.JButton();
        btnLand = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        inputID = new javax.swing.JTextField();
        inputCost = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        lblManyRooms = new javax.swing.JLabel();
        inputBuildingArea = new javax.swing.JTextField();
        inputManyRooms = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        inputLocation = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblAvailable = new javax.swing.JLabel();
        comboAvailable = new javax.swing.JComboBox<>();
        btnWithDraw = new javax.swing.JButton();
        labelWelcome = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        label_balance = new javax.swing.JLabel();

        btnTopUp.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnTopUp.setText("Top Up");
        btnTopUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopUpActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel2.setText("Your Property Sale");

        tblOutput.setBackground(new java.awt.Color(229, 239, 193));
        tblOutput.setForeground(new java.awt.Color(0, 0, 0));
        tblOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "First Name", "Last Name", "Balance", "User Name", "Password"
            }
        ));
        tblOutput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOutputMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblOutput);

        btnHouse.setText("House");
        btnHouse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHouseMouseClicked(evt);
            }
        });
        btnHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHouseActionPerformed(evt);
            }
        });

        btnLand.setText("Land");
        btnLand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLandActionPerformed(evt);
            }
        });

        jLabel3.setText("Detail Property");

        jLabel4.setText("Cost");

        jLabel5.setText("ID Property");

        inputID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputIDKeyTyped(evt);
            }
        });

        inputCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputCostKeyTyped(evt);
            }
        });

        lblArea.setText("Building Area");

        lblManyRooms.setText("Many Rooms");

        inputBuildingArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputBuildingAreaKeyTyped(evt);
            }
        });

        inputManyRooms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputManyRoomsKeyTyped(evt);
            }
        });

        jLabel9.setText("Location");

        btnAdd.setBackground(new java.awt.Color(57, 174, 169));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(57, 174, 169));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(57, 174, 169));
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblAvailable.setText("Available");

        comboAvailable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(119, 119, 119))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(lblArea)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblAvailable)
                                        .addComponent(lblManyRooms)))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(inputBuildingArea, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                                        .addComponent(inputCost)
                                        .addComponent(inputLocation)
                                        .addComponent(inputID))
                                    .addComponent(inputManyRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(397, 397, 397))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnHouse)
                        .addGap(18, 18, 18)
                        .addComponent(btnLand)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLand)
                    .addComponent(btnHouse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(inputCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(inputLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblArea)
                            .addComponent(inputBuildingArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvailable)
                            .addComponent(comboAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManyRooms)
                            .addComponent(inputManyRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(btnCancel)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnDelete))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnWithDraw.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnWithDraw.setText("Withdraw");
        btnWithDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithDrawActionPerformed(evt);
            }
        });

        labelWelcome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelWelcome.setText("Hello, (name), Welcome Back");

        btnLogOut.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Your Balance :");

        label_balance.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        label_balance.setForeground(new java.awt.Color(51, 51, 51));
        label_balance.setText("Rp.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(label_balance))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(359, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_balance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLogOut)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnWithDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnLogOut)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnWithDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTopUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopUpActionPerformed
        app.showTopUpView();
    }//GEN-LAST:event_btnTopUpActionPerformed

    private void tblOutputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOutputMouseClicked
        // TODO add your handling code here
        lblAvailable.setText("Available");
        comboAvailable.setVisible(true);
        if (type == 0) {
            inputID.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 0).toString());
            inputCost.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 1).toString());
            inputLocation.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 2).toString());
            inputBuildingArea.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 3).toString());
            inputManyRooms.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 4).toString());
        } else {
            inputID.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 0).toString());
            inputCost.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 1).toString());
            inputLocation.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 2).toString());
            inputBuildingArea.setText(tblOutput.getValueAt(tblOutput.
                    getSelectedRow(), 3).toString());
        }

        btnAdd.setText("Change");
    }//GEN-LAST:event_tblOutputMouseClicked

    private void btnWithDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithDrawActionPerformed
        app.showWithdrawView();
    }//GEN-LAST:event_btnWithDrawActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        app.currentUser = -1;
        app.currentType = -1;
        app.showLoginView();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (type == 0) {
            int id = Integer.parseInt(inputID.getText());
            int cost = Integer.parseInt(inputCost.getText());
            int buildingArea = Integer.parseInt(inputBuildingArea.getText());
            int manyRooms = Integer.parseInt(inputManyRooms.getText());
            String location = inputLocation.getText();

            if ("".equals(id) || "".equals(cost)
                    || "".equals(location)
                    || "".equals(buildingArea)
                    || "".equals(manyRooms)) {
                JOptionPane.showMessageDialog(this, "Can't add "
                        + "blank form");
            } else {
                if ("Add".equals(btnAdd.getText())) {
                    try {
                        int idx = app.store.findHouse(id);
                        JOptionPane.showMessageDialog(this, "this"
                                + " item already used");
                    } catch (Exception e) {
                        app.store.getSeller(indexLogin).addHouse(id, buildingArea, manyRooms, cost, location);

                    }
                } else {
                    boolean available;

                    String itemSelected = comboAvailable.getSelectedItem() + "";
                    if (itemSelected.equals("Yes")) {
                        available = true;
                    } else {
                        available = false;
                    }
                    app.store.getSeller(indexLogin).editHouse(tblOutput.getSelectedRow(), id, buildingArea, manyRooms,
                            location, cost, available);
                }
            }
        } else {
            int id = Integer.parseInt(inputID.getText());
            int cost = Integer.parseInt(inputCost.getText());
            int landArea = Integer.parseInt(inputBuildingArea.getText());
            String location = inputLocation.getText();

            if ("".equals(id) || "".equals(cost)
                    || "".equals(location)
                    || "".equals(landArea)) {
                JOptionPane.showMessageDialog(this, "Can't add "
                        + "blank form");
            } else {
                if ("Add".equals(btnAdd.getText())) {
                    try {
                        int idx = app.store.findLand(id);
                        JOptionPane.showMessageDialog(this, "this "
                                + "code id item already used");
                    } catch (Exception e) {
                        app.store.getSeller(indexLogin).addLand(id, landArea,
                                cost, location);
                    }
                } else {
                    boolean available;

                    String itemSelected = comboAvailable.getSelectedItem() + "";
                    if (itemSelected.equals("Yes")) {
                        available = true;
                    } else {
                        available = false;
                    }
                    app.store.getSeller(indexLogin).editLand(tblOutput.getSelectedRow(), id, cost, location,
                            landArea, available);
                }

            }

        }

        DataView();

        clear();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (inputCost.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Choose the "
                    + "data, that you want to delete");
        } else {
            int answer = JOptionPane.showConfirmDialog(null,
                    "Are you sure delete this data?");
            if (answer == 0) {

                if (type == 0) {
                    app.store.getSeller(indexLogin).
                            deleteHouse(tblOutput.getSelectedRow());
                    DataView();
                    clear();
                } else {
                    app.store.getSeller(indexLogin).
                            deleteLand(tblOutput.getSelectedRow());
                    DataView();
                    clear();
                }
            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnLandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLandActionPerformed
        // TODO add your handling code here:
        clear();
        lblManyRooms.setText("");
        lblArea.setText("Land Area");
        inputManyRooms.setVisible(false);
        type = 1;
        DataView();
    }//GEN-LAST:event_btnLandActionPerformed

    private void btnHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHouseActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnHouseActionPerformed

    private void btnHouseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHouseMouseClicked
        // TODO add your handling code here:
        clear();
        lblManyRooms.setText("Many Rooms");
        lblArea.setText("Building Area");
        inputManyRooms.setVisible(true);
        type = 0;
        DataView();
    }//GEN-LAST:event_btnHouseMouseClicked

    private void inputIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputIDKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_inputIDKeyTyped

    private void inputCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCostKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_inputCostKeyTyped

    private void inputBuildingAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputBuildingAreaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_inputBuildingAreaKeyTyped

    private void inputManyRoomsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputManyRoomsKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_inputManyRoomsKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHouse;
    private javax.swing.JButton btnLand;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnTopUp;
    private javax.swing.JButton btnWithDraw;
    private javax.swing.JComboBox<String> comboAvailable;
    private javax.swing.JTextField inputBuildingArea;
    private javax.swing.JTextField inputCost;
    private javax.swing.JTextField inputID;
    private javax.swing.JTextField inputLocation;
    private javax.swing.JTextField inputManyRooms;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelWelcome;
    private javax.swing.JLabel label_balance;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblManyRooms;
    private javax.swing.JTable tblOutput;
    // End of variables declaration//GEN-END:variables
}
